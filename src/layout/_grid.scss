@use "../config/breakpoints" as bp;
@use "../config/space" as space;

@layer layout {
  .grid {
    column-gap: var(--grid-x-gap);
    display: grid;
    grid-template-columns:
      [full-start] minmax(var(--grid-margin-min), var(--grid-margin-max)) [content-start] repeat(10, minmax(0, 1fr)) [content-end] minmax(var(--grid-margin-min), var(--grid-margin-max)) [full-end];
    place-content: start;
    row-gap: var(--grid-y-gap);
    width: 100%;
  }

  .gap-collapse {
    margin-top: calc(var(--grid-y-gap) * -1);
  }

  .gap-x-0 {
    --grid-x-gap: 0;
  }

  .gap-y-0 {
    --grid-y-gap: 0;
  }

  @each $name, $space in space.$space-scales {
    .gap-x-#{$name} {
      --grid-x-gap: var(--space-#{$name});
    }

    .gap-y-#{$name} {
      --grid-y-gap: var(--space-#{$name});
    }
  }

  // Full width column
  .span-full {
    grid-column-end: -1;
    grid-column-start: 1;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-full\:#{$name} {
          grid-column-end: -1;
          grid-column-start: 1;
        }
      }
    }
  }

  // Content width
  .span-content {
    grid-column-end: -2;
    grid-column-start: 2;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-content\:#{$name} {
          grid-column-end: -2;
          grid-column-start: 2;
        }
      }
    }
  }

  // Generate .col-x classes
  @for $i from 1 through 12 {
    $num: $i;

    .span-#{$num} {
      grid-column-end: span $num;
      grid-column-start: auto;
    }
  }

  @for $i from 1 through 11 {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-#{$num}\:#{$name} {
          grid-column-end: span $num;
          grid-column-start: auto;
        }
      }
    }
  }

  // Generate .col-start-x classes
  @for $i from 0 through 11 {
    $num: $i;

    .start-#{$num} {
      grid-column-start: $num + 1;
    }
  }

  @for $i from 0 through 11 {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .start-#{$num}\:#{$name} {
          grid-column-start: $num + 1;
        }

        .subgrid .start-#{$num}\:#{$name} {
          grid-column-start: $num;
        }
      }
    }
  }


  // Generate .col-start-x classes to be used in .col-content
  @for $i from 1 through 10 {
    $num: $i;

    .span-content .start-#{$num} {
      grid-column-start: $num;
    }
  }


  @for $i from 1 through 10 {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-content .start-#{$num}\:#{$name} {
          grid-column-start: $num;
        }
      }
    }
  }

  // Subgrid
  .subgrid {
    display: grid;
    gap: inherit;
    grid-template-columns: subgrid;
    place-content: start;
  }
}