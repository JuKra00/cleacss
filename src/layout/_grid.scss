@use "../config/breakpoints" as bp;
@use "../config/space" as space;
$numberOfColumns: 14;

@layer layout {

  // Subgrid
  .subgrid,
  .grid .grid {
    display: grid;
    gap: inherit;
    grid-template-columns: subgrid;
    place-content: start;
  }

  .grid:not(.grid .grid),
  .grid-reset {
    column-gap: var(--grid-gap-x);
    display: grid;
    grid-template-columns: [full-start] minmax(var(--grid-margin-min), var(--grid-margin-max)) [content-start] repeat(#{$numberOfColumns - 2}, minmax(0, 1fr)) [content-end] minmax(var(--grid-margin-min), var(--grid-margin-max)) [full-end];
    place-content: start;
    row-gap: var(--grid-gap-y);
    width: 100%;
  }

  // Full width column
  .span-full {
    grid-column-end: -1;
    grid-column-start: 1;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-full\:#{$name} {
          grid-column-end: -1;
          grid-column-start: 1;
        }
      }
    }
  }

  // Content width
  .span-content {
    grid-column-end: -2;
    grid-column-start: 2;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-content\:#{$name} {
          grid-column-end: -2;
          grid-column-start: 2;
        }
      }
    }
  }

  // Generate .span-x classes
  @for $i from 1 through $numberOfColumns {
    $num: $i;

    .span-#{$num} {
      grid-column-end: span $num;
      grid-column-start: auto;
    }
  }

  @for $i from 1 through $numberOfColumns {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-#{$num}\:#{$name} {
          grid-column-end: span $num;
          grid-column-start: auto;
        }
      }
    }
  }

  // Generate .start-x classes
  @for $i from 0 through ($numberOfColumns - 1) {
    $num: $i;

    .start-#{$num} {
      grid-column-start: $num + 1;
    }

    .subgrid .start-#{$num},
    .grid .grid .start-#{$num} {
      grid-column-start: $num;
    }
  }

  @for $i from 0 through ($numberOfColumns - 1) {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .start-#{$num}\:#{$name} {
          grid-column-start: $num + 1;
        }

        .subgrid .start-#{$num}\:#{$name},
        .grid .grid .start-#{$num}\:#{$name} {
          grid-column-start: $num;
        }
      }
    }
  }

  // Generate .start-x classes to be used in .col-content
  @for $i from 1 through ($numberOfColumns - 2) {
    $num: $i;

    .span-content .start-#{$num} {
      grid-column-start: $num;
    }
  }

  @for $i from 1 through ($numberOfColumns - 2) {
    $num: $i;

    @each $name, $value in bp.$breakpoints {
      @media (--#{$name}) {
        .span-content .start-#{$num}\:#{$name} {
          grid-column-start: $num;
        }
      }
    }
  }
}

@layer has {
  .has-gap-collapse {
    margin-top: calc(var(--grid-gap-y) * -1);
  }

  .has-gap-x-0 {
    --grid-gap-x: 0;
  }

  .has-gap-y-0 {
    --grid-gap-y: 0;
  }

  @each $name, $space in space.$space-scales {
    .has-gap-x-#{$name} {
      --grid-gap-x: var(--space-#{$name});
    }

    .has-gap-y-#{$name} {
      --grid-gap-y: var(--space-#{$name});
    }
  }
}